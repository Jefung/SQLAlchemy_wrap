# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
        environment:
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: password


    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            # install PySide
            pip install -r requirements.txt
            pip install pytest pycodestyle
            sudo apt-get install mysql-client
            sudo apt-get -y install mysql-server

      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            ps aux | grep mysql

      - run:
          name: Create non-admin user and create db 'unittest'
          command: |
            sudo mysql -u root -e "CREATE user unittest IDENTIFIED BY 'unittest';"
            sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS unittest;"
            sudo mysql -u root -e "GRANT ALL PRIVILEGES ON unittest.* TO 'unittest'@'localhost' IDENTIFIED BY 'unittest';"
            sudo mysql -u root -e "create table if not exists unittest.unittest_table ( \
                          id int(11) not null AUTO_INCREMENT, \
                          name varchar(50) default null, PRIMARY KEY (id) );"

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pycodestyle . --max-line-length=120 --exclude=./venv
            python -m pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = levlaz" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*